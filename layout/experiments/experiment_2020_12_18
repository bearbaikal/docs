при таких настройках min-width будет использоваться, несмотря на то, что задан flex-shrink 




<template lang="pug">
div.container
  div.inner.perfect
    p perfect
  div.inner.beautiful
    p beautiful
  div.inner.awesome
    p awesome
</template>
<script>
</script>
<style lang="sass" scoped>
.container
  padding: 50px
  width: 100%
  height: 800px
  box-sizing: border-box
  background: #BDF9A3
  display: flex
  flex-direction: row
  justify-content: space-around
  align-items: flex-start
.inner
  padding: 30px 
  margin: 20px
  height: auto
  //min-width: 300px
  width: 300px
  min-width: 300px
  //flex-basis: 100%  
  text-align: center
  background: #A3E7F9
  font-size: 1.5rem
.perfect
  ///flex-grow: 1
  flex-shrink: 1
.beautiful
  //flex-grow: 1
  flex-shrink: 3
.awesome
  //flex-grow: 3
  flex-shrink: 1
</style>


а вот так уже будет применяться flex-grow несмотря на то, что задан width
и блоки привысят свой width

<template lang="pug">
div.container
  div.inner.perfect
    p perfect
  div.inner.beautiful
    p beautiful
  div.inner.awesome
    p awesome
</template>
<script>
</script>
<style lang="sass" scoped>
.container
  padding: 50px
  width: 100%
  height: 800px
  box-sizing: border-box
  background: #BDF9A3
  display: flex
  flex-direction: row
  justify-content: space-around
  align-items: flex-start
.inner
  padding: 30px 
  margin: 20px
  height: auto
  //min-width: 300px
  width: 300px
  //flex-basis: 100%  
  text-align: center
  background: #A3E7F9
  font-size: 1.5rem
.perfect
  flex-grow: 1
  flex-shrink: 1
.beautiful
  flex-grow: 1
  flex-shrink: 3
.awesome
  flex-grow: 3
  flex-shrink: 1
</style>

